<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="storeMapper">
	<!-- 주문 정보 -->
	<insert id="orderInsert">
		insert into myorder(orderId, memberId, totalAmount)
			values(#{orderId}, #{memberId}, #{totalAmount})
	</insert>
	
	<!-- 주문 상세 정보 -->
	<insert id="detailInsert">
		insert into order_detail(orderDetailNum, orderId, store_num)
			select detail_seq.nextval, #{orderId}, store_num
				from cart
	</insert>
	
	<!-- 카트 삭제 -->
	<delete id="cartDelete" parameterType="CartVO">
		delete from cart
		where cart_num = #{cart_num} and member_id = #{member_id}
	</delete>
		
	<!-- 카트 수정 -->
	<update id="cartUpdate" parameterType="CartListVO">
		update cart
		set cart_amount = #{cart_amount}, cart_date = sysdate
		where cart_num = #{cart_num} and member_id = #{member_id}
	</update>
	
	<!-- 카트 리스트 -->
	<select id="cartList" resultType="CartListVO" parameterType="CartListVO">
		select
		    ROW_NUMBER() OVER (ORDER BY c.cart_num desc) as cartList_num,
		    c.cart_num, c.member_id, c.store_num, c.cart_amount, c.cart_date,
		    s.store_name, s.store_price, s.store_note, s.store_thumbimg
		from cart c
		    inner join store s
		    on c.store_num = s.store_num
		where c.member_id = #{member_id}
	</select>
	
	<!-- 카트 동일 상품 존재 여부 조회 -->
	<select id="cartSelect" resultType="CartVO" parameterType="CartVO">
		select * from cart
		where store_num = #{store_num} and member_id = #{member_id}
	</select>
	
	<!-- 카트 담기 -->
	<insert id="cartInsert" parameterType="CartVO">
		insert into cart (cart_num, member_id, store_num, cart_amount)
		values (cart_seq.nextval, #{member_id}, #{store_num}, #{cart_amount})
	</insert>
	
	<!-- 스토어 -->
	<delete id="storeDelete" parameterType="StoreVO">
		delete from store
		where store_num=#{store_num}
	</delete>

  	<update id="storeUpdate" parameterType="StoreVO">
  		update store
  		set store_name=#{store_name}, store_price=#{store_price}, store_note=#{store_note}, store_package=#{store_package}, store_img=#{store_img}, store_thumbimg=#{store_thumbimg}
  		where store_num=#{store_num}
  	</update>
  	
  	<insert id="storeWrite" parameterType="StoreVO">
  		insert into store
  		values(store_seq.nextval, #{store_name}, #{store_price}, 0, #{store_note}, #{store_package}, #{store_img}, #{store_thumbimg})
  	</insert>
  	
  	<select id="storeSelect" resultType="StoreVO" parameterType="StoreVO">
  		select * from store
  		where store_num=#{store_num}
  	</select>
  	
  	<select id="storeList" resultType="StoreVO" parameterType="StoreVO">
  		select * from store
  		where store_package=#{store_package}
  		order by store_num
  	</select>
</mapper>